{"version":3,"sources":["utils/constants.js","api/getData.ts","api/getTodos.ts","api/getUsers.ts","components/TodoItem.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["API_URL","getData","url","a","fetch","response","json","data","getTodos","getUsers","TodoItem","todo","id","title","completed","user","className","name","TodoList","todos","filter","onClick","map","key","App","useState","saveTodos","visibleTodos","saveVisibleTodos","isLoading","setLoading","isLoaded","setLoaded","filterUsed","setFilterUsed","loadTodos","Promise","all","finally","loadedTodos","loadedUsers","preparedTodos","find","person","userId","option","sort","b","localeCompare","reverse","type","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e82d8389.chunk.js","sourcesContent":["export const API_URL = 'https://jsonplaceholder.typicode.com';\n","export const getData = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n","import { API_URL } from '../utils/constants';\nimport { TodoType } from '../utils/interfaces';\nimport { getData } from './getData';\n\n\nexport const getTodos = async (): Promise<TodoType[]> => {\n  return getData<TodoType[]>(`${API_URL}/todos`);\n};\n","import { API_URL } from '../utils/constants';\nimport { UserType } from '../utils/interfaces';\nimport { getData } from './getData';\n\nexport const getUsers = async (): Promise<UserType[]> => {\n  return getData<UserType[]>(`${API_URL}/users`);\n};\n","import React, { FC } from 'react';\nimport { PreparedTodo } from '../utils/interfaces';\n\ninterface Props {\n  todo: PreparedTodo;\n}\n\nexport const TodoItem: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <tr className=\"table__row\">\n      <td className=\"table__cell\">{id}</td>\n      <td className=\"table__cell\">{user.name}</td>\n      <td className=\"table__cell\">{title}</td>\n      <td className=\"table__cell\">{completed ? 'Yes' : 'No'}</td>\n    </tr>\n  );\n};\n","import React, { FC } from 'react';\nimport { TodoItem } from './TodoItem';\nimport { PreparedTodo } from '../utils/interfaces';\n\n\ninterface Props {\n  todos: PreparedTodo[];\n  filter: (option: string) => void;\n}\n\nexport const TodoList: FC<Props> = ({ todos, filter }) => (\n  <table className=\"table\">\n    <thead className=\"table__head\">\n      <tr className=\"table__row\">\n        <th className=\"table__heading\" onClick={() => filter('id')}>\n          No\n        </th>\n        <th className=\"table__heading\" onClick={() => filter('username')}>\n          Name\n        </th>\n        <th className=\"table__heading\" onClick={() => filter('title')}>\n          Title\n        </th>\n        <th className=\"table__heading\" onClick={() => filter('completed')}>\n          Status\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => <TodoItem key={todo.id} todo={todo} />)}\n    </tbody>\n  </table>\n);\n","import React, { FC, useState } from 'react';\nimport './App.css';\n\nimport { getTodos } from './api/getTodos';\nimport { getUsers } from './api/getUsers';\n\nimport { TodoList } from './components/TodoList';\nimport { PreparedTodo, UserType } from './utils/interfaces';\n\nconst App: FC = () => {\n  const [todos, saveTodos] = useState<PreparedTodo[]>([]);\n  const [visibleTodos, saveVisibleTodos] = useState<PreparedTodo[]>([...todos]);\n  const [isLoading, setLoading] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n  const [filterUsed, setFilterUsed] = useState(true);\n\n  const loadTodos = async () => {\n    setLoading(true);\n\n    const [loadedTodos, loadedUsers] = await Promise.all([\n      getTodos(),\n      getUsers(),\n    ]).finally(() => setLoaded(true));\n\n    const preparedTodos = [...loadedTodos]\n      .map((todo) => {\n        const user = loadedUsers.find(person => person.id === todo.userId) as UserType;\n\n        return {\n          ...todo,\n          user,\n        };\n      });\n\n    saveTodos(preparedTodos);\n    saveVisibleTodos(preparedTodos);\n    setLoading(false);\n  };\n\n  const sortFilter = (option: string) => {\n    if (filterUsed) {\n      switch (option) {\n        case 'id': saveVisibleTodos([...todos]\n          .sort((a, b) => b.id - a.id));\n          break;\n        case 'completed': saveVisibleTodos([...todos]\n          .sort(a => (a.completed ? -1 : 1)));\n          break;\n        case 'username': saveVisibleTodos([...todos]\n          .sort((a, b) => (b.user.name.localeCompare(a.user.name))));\n          break;\n        default: saveVisibleTodos([...todos]\n          .sort((a, b) => b.title.localeCompare(a.title)));\n      }\n\n      setFilterUsed(false);\n    } else {\n      saveVisibleTodos(visibleTodos.reverse());\n      setFilterUsed(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {!isLoaded\n        ? (\n          <button\n            type=\"button\"\n            className=\"button\"\n            disabled={isLoading}\n            onClick={loadTodos}\n          >\n            {isLoading ? (<>Loading...</>) : (<>Load Todos</>)}\n          </button>\n        )\n        : (\n          <TodoList todos={visibleTodos} filter={sortFilter} />\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}